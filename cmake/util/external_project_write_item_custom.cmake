function(ExternalProject_Get_PropertyCustom name)
  foreach (var ${ARGN})
    string(TOUPPER "${var}" VAR)
    get_property(is_set TARGET ${name} PROPERTY _EP_${VAR} SET)
    if (NOT is_set)
      #       message(WARNING "External project \"${name}\" has no ${var}")
    endif ()
    get_property(${var} TARGET ${name} PROPERTY _EP_${VAR})
    set(${var} "${${var}}" PARENT_SCOPE)
  endforeach ()
endfunction()

macro(print_any_var var)
  message(STATUS "Var ${var} - ${${var}}")
endmacro()

macro(pe_x_x lib item)
  ExternalProject_Get_PropertyCustom(${lib} ${item})
  if (${item})
    message(STATUS "EX - ${lib} ${item} : ${${item}}")
  endif ()
endmacro()


macro(print_external_itm_many m_arg_lib)
  pe_x_x(${m_arg_lib} PREFIX)
  pe_x_x(${m_arg_lib} TMP_DIR)
  pe_x_x(${m_arg_lib} STAMP_DIR)
  pe_x_x(${m_arg_lib} LOG_DIR)
  pe_x_x(${m_arg_lib} DOWNLOAD_DIR)
  pe_x_x(${m_arg_lib} SOURCE_DIR)
  pe_x_x(${m_arg_lib} BINARY_DIR)
  pe_x_x(${m_arg_lib} INSTALL_DIR)
  
  pe_x_x(${m_arg_lib} DOWNLOAD_COMMAND)
  pe_x_x(${m_arg_lib} URL)
  pe_x_x(${m_arg_lib} URL_HASH)
  pe_x_x(${m_arg_lib} URL_MD5)
  pe_x_x(${m_arg_lib} DOWNLOAD_NAME)
  pe_x_x(${m_arg_lib} DOWNLOAD_NO_EXTRACT)
  pe_x_x(${m_arg_lib} DOWNLOAD_NO_PROGRESS)
  pe_x_x(${m_arg_lib} TIMEOUT)
  pe_x_x(${m_arg_lib} HTTP_USERNAME)
  pe_x_x(${m_arg_lib} HTTP_PASSWORD)
  pe_x_x(${m_arg_lib} HTTP_HEADER)
  pe_x_x(${m_arg_lib} TLS_VERIFY)
  pe_x_x(${m_arg_lib} TLS_CAINFO)
  pe_x_x(${m_arg_lib} NETRC)
  pe_x_x(${m_arg_lib} NETRC_FILE)

  pe_x_x(${m_arg_lib} GIT_REPOSITORY)
  pe_x_x(${m_arg_lib} GIT_TAG)
  pe_x_x(${m_arg_lib} GIT_REMOTE_NAME)
  pe_x_x(${m_arg_lib} GIT_SUBMODULES)
  pe_x_x(${m_arg_lib} GIT_SHALLOW )
  pe_x_x(${m_arg_lib} GIT_PROGRESS  )
  pe_x_x(${m_arg_lib} GIT_CONFIG)
  
  # MISSING: SVN, CVS options

  pe_x_x(${m_arg_lib} UPDATE_COMMAND)
  pe_x_x(${m_arg_lib} UPDATE_DISCONNECTED)
  pe_x_x(${m_arg_lib} PATCH_COMMAND)
  
  pe_x_x(${m_arg_lib} CONFIGURE_COMMAND)
  pe_x_x(${m_arg_lib} CMAKE_COMMAND )
  pe_x_x(${m_arg_lib} CMAKE_GENERATOR )
  pe_x_x(${m_arg_lib} CMAKE_GENERATOR_PLATFORM )
  pe_x_x(${m_arg_lib} CMAKE_GENERATOR_TOOLSET )
  pe_x_x(${m_arg_lib} CMAKE_GENERATOR_INSTANCE )
  pe_x_x(${m_arg_lib} CMAKE_ARGS  )
  pe_x_x(${m_arg_lib} CMAKE_CACHE_ARGS  )
  pe_x_x(${m_arg_lib} CMAKE_CACHE_DEFAULT_ARGS  )
  pe_x_x(${m_arg_lib} SOURCE_SUBDIR  )
  
  pe_x_x(${m_arg_lib} BUILD_COMMAND  )
  pe_x_x(${m_arg_lib} BUILD_IN_SOURCE   )
  pe_x_x(${m_arg_lib} BUILD_ALWAYS   )
  pe_x_x(${m_arg_lib} BUILD_BYPRODUCTS   )
  
  pe_x_x(${m_arg_lib} INSTALL_COMMAND   )
  # ALL TRIPLECHECKED UNTIL HERE
  
  pe_x_x(${m_arg_lib} LIST_SEPARATOR)
  pe_x_x(${m_arg_lib} EXCLUDE_FROM_ALL)
  pe_x_x(${m_arg_lib} STEP_TARGETS)
  pe_x_x(${m_arg_lib} DEPENDS)
  pe_x_x(${m_arg_lib} USES_TERMINAL_DOWNLOAD)
  pe_x_x(${m_arg_lib} LOG_UPDATE)
  pe_x_x(${m_arg_lib} LOG_DOWNLOAD)
  pe_x_x(${m_arg_lib} INSTALL_COMMAND)
  pe_x_x(${m_arg_lib} BUILD_COMMAND)
  
  pe_x_x(${m_arg_lib} PATCH_COMMAND)

endmacro()